{"version":3,"sources":["components/Header/index.js","components/Container/index.js","utils/API.js","components/TableResults/index.js","components/SearchBox/index.js","components/TableContainer/index.js","pages/Directory.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Container","props","children","axios","get","TableResults","rows","results","filter","emp","name","last","toLowerCase","includes","search","map","id","value","login","username","first","email","cell","scope","onClick","onSortChange","SearchBox","onChange","handleInputChange","type","placeholder","TableContainer","event","preventDefault","setState","state","target","sortArray","currentSort","sort","a","b","API","then","res","data","catch","err","console","log","this","Component","Directory","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7ac0dd0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n    return (\n        <div className=\"jumbotron text-center\">\n            <h1>Employee Directory</h1>\n        </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;","/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\n\n// limit to 50 employees\nconst EMPURL = \"https://randomuser.me/api/?results=50&nat=us\";\n\nexport default {\n  getRandomEmployees: () => axios.get(EMPURL)\n};\n\n// ESLint... https://github.com/benmosher/eslint-plugin-import/blob/v2.22.1/docs/rules/no-anonymous-default-export.md","import React from 'react';\n\nfunction TableResults(props) {\n    \n    // filter down the results if there is a search word entered\n    let employees = props.results.filter(emp => emp.name.last.toLowerCase().includes(props.search));\n\n    // map the employee results to table rows\n    let rows = employees.map(emp => (\n        <tr key={emp.id.value}>\n            <td>{emp.id.value}</td>\n            <td>{emp.login.username}</td>\n            <td>{emp.name.first}</td>\n            <td>{emp.name.last}</td>\n            <td>{emp.email}</td>\n            <td>{emp.cell}</td>\n        </tr>\n    ));\n\n    // create headers and pass in rows\n    return (\n        <div className=\"row\">\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <caption>List of employees</caption>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Employee ID</th>\n                            <th scope=\"col\">Username</th>\n                            <th scope=\"col\">First Name</th>\n                            <th scope=\"col\">Last Name\n                            <button className=\"btn text-white\" onClick={props.onSortChange}>\n                                    <i className={`fas fa-sort`}></i>\n                                </button></th>\n                            <th scope=\"col\">E-mail</th>\n                            <th scope=\"col\">Cell Phone</th>\n                        </tr>\n                    </thead>\n                    <tbody>{rows}</tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default TableResults;\n\n// Notes\n// Week 19 Activity 23-Pupster - SearchResults\n// Bootstrap Tables https://getbootstrap.com/docs/4.5/content/tables/\n// Sort table with react https://www.florin-pop.com/blog/2019/07/sort-table-data-with-react/","import React from \"react\";\n\n// search box is a bootstrap input group\n\nfunction SearchBox(props) {\n    return (\n        <div>\n            <h2 className=\"text-center\">Search for employees!</h2>\n                <div className=\"input-group pb-4\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">Employee Last Name</span>\n                    </div>\n                    <input\n                        value={props.search}\n                        onChange={props.handleInputChange}\n                        name=\"search\"\n                        type=\"search\"\n                        className=\"form-control\"\n                        placeholder=\"Last name...\"\n                        id=\"empsearch\"\n                    />\n                </div>\n        </div>\n    );\n}\n\nexport default SearchBox;\n\n// Notes\n// Week 19 Activity 23-Pupster - SearchForm\n// Only needed handleInputChange here and not handleformsubmit","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport TableResults from \"../TableResults\";\nimport SearchBox from \"../SearchBox\";\n\nclass TableContainer extends Component {\n    //https://reactjs.org/docs/handling-events.html\n    constructor(props) {\n        super(props)\n        this.state = {\n            results: [], // original copy - don't change\n            currentSort: 'asc',\n            search: \"\"\n        };\n    }\n\n    // get employee data from the API\n    componentDidMount() {\n        API.getRandomEmployees()\n            .then(res => this.setState(\n                { \n                    results: res.data.results \n                }\n            ))\n            .catch(err => console.log(err));\n    }\n\n    // get the search value and add to state\n    handleInputChange = event => {\n        event.preventDefault();\n        \n        this.setState(\n            { \n                ...this.state,\n                search: event.target.value.toLowerCase()\n            }\n        );\n    };\n\n    // function to sort the results and setState with new results\n    onSortChange = () => {\n        let sortArray = [...this.state.results];\n        if (this.state.currentSort === 'asc') {\n            sortArray.sort((a, b) => (a.name.last > b.name.last ? 1 : -1));\n            this.setState({\n                ...this.state,\n                results: sortArray,\n                currentSort: 'desc'\n            });\n        } else {\n            sortArray.sort((a, b) => (a.name.last < b.name.last ? 1 : -1));\n            this.setState({\n                ...this.state,\n                results: sortArray,\n                currentSort: 'asc'\n            });\n        }\n    };\n\n    // render the table results component with the current state\n    render() {\n        return (\n            <div>\n                <SearchBox  \n                    handleInputChange={this.handleInputChange} \n                />\n                <TableResults \n                    results={this.state.results} \n                    onSortChange={this.onSortChange} \n                    search={this.state.search}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TableContainer;\n\n// Notes\n// Sort array of objects: https://flaviocopes.com/how-to-sort-array-of-objects-by-property-javascript/","import React from \"react\";\nimport Header from \"../components/Header\";\nimport Container from \"../components/Container\";\nimport TableContainer from \"../components/TableContainer\";\n\nfunction Directory() {\n    return (\n        <div>\n            <Header />\n            <Container>\n                <TableContainer />\n            </Container>\n        </div>\n    )\n}\n\nexport default Directory;","import Directory from \"./pages/Directory\";\n\nfunction App() {\n  return (\n    <Directory />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}